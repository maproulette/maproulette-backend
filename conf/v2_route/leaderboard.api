###
# tags: [ Leaderboard ]
# summary: Fetches the mapper leaderboard stats
# produces: [ application/json ]
# description: Fetches the mapper leaderboard stats
# responses:
#   '200':
#     description: List of leaderboard stats
# parameters:
#   - name: userIds
#     in: query
#     description: The optional user ids to search by
#   - name: projectIds
#     in: query
#     description: The optional project ids to search by
#   - name: challengeIds
#     in: query
#     description: The optional challenge ids to search by
#   - name: countryCodes
#     in: query
#     description: The optional country codes to search by
#   - name: monthDuration
#     in: query
#     description: The optional number of past months to search by (with 0 as current month and -1 as all time)
#   - name: start
#     in: query
#     description: The optional start date when not using monthDuration
#   - name: end
#     in: query
#     description: The optional end date when not using monthDuration
#   - name: onlyEnabled
#     in: query
#     description: Limit search to only enabled challenges
###
GET     /data/user/leaderboard                      @org.maproulette.framework.controller.LeaderboardController.getMapperLeaderboard(limit:Int ?= 20, offset:Int ?= 0)
###
# tags: [ Leaderboard ]
# summary: Fetches leaderboard stats with ranking for the user
# produces: [ application/json ]
# description: Fetches user's current ranking and stats in the leaderboard along with a number of mappers above and below in the rankings.
# responses:
#   '200':
#     description: List of leaderboard stats
# parameters:
#   - name: userId
#     in: query
#     description: User id to fetch ranking for.
#   - name: projectIds
#     in: query
#     description: The optional project ids to search by
#   - name: challengeIds
#     in: query
#     description: The optional challenge ids to search by
#   - name: countryCodes
#     in: query
#     description: The optional country codes to search by
#   - name: monthDuration
#     in: query
#     description: The optional number of past months to search by (with 0 as current month and -1 as all time)
#   - name: start
#     in: query
#     description: The optional start date when not using monthDuration
#   - name: end
#     in: query
#     description: The optional end date when not using monthDuration
#   - name: onlyEnabled
#     in: query
#     description: Limit search to only enabled challenges
#   - name: bracket
#     in: query
#     description: How many results before and after the found user to return
###
GET     /data/user/:userId/leaderboard              @org.maproulette.framework.controller.LeaderboardController.getLeaderboardForUser(userId:Long, bracket:Int ?= 0)
###
# tags: [ Leaderboard ]
# summary: Gets the top challenges worked on by the user
# produces: [ application/json ]
# description: Gets the top challenges worked on by the user
# responses:
#   '200':
#     description: Brief list of challenges
# parameters:
#   - name: userId
#     in: query
#     description: User id to fetch challenges for.
#   - name: projectIds
#     in: query
#     description: The optional project ids to search by
#   - name: challengeIds
#     in: query
#     description: The optional challenge ids to search by
#   - name: countryCodes
#     in: query
#     description: The optional country codes to search by
#   - name: monthDuration
#     in: query
#     description: The optional number of past months to search by (with 0 as current month and -1 as all time)
#   - name: start
#     in: query
#     description: The optional start date when not using monthDuration
#   - name: end
#     in: query
#     description: The optional end date when not using monthDuration
#   - name: onlyEnabled
#     in: query
#     description: Limit search to only enabled challenges
###
GET     /data/user/:userId/topChallenges            @org.maproulette.framework.controller.LeaderboardController.getUserTopChallenges(userId:Long, limit:Int ?= 20, offset:Int ?= 0)
###
# tags: [ Leaderboard ]
# summary: Fetches the reviewer leaderboard stats
# produces: [ application/json ]
# description: Fetches the reviewer leaderboard stats
# responses:
#   '200':
#     description: List of leaderboard stats
# parameters:
#   - name: projectIds
#     in: query
#     description: The optional project ids to search by
#   - name: challengeIds
#     in: query
#     description: The optional challenge ids to search by
#   - name: monthDuration
#     in: query
#     description: The optional number of past months to search by (with 0 as current month and -1 as all time)
#   - name: start
#     in: query
#     description: The optional start date when not using monthDuration
#   - name: end
#     in: query
#     description: The optional end date when not using monthDuration
###
GET     /data/reviewer/leaderboard                      @org.maproulette.framework.controller.LeaderboardController.getReviewerLeaderboard(limit:Int ?= 20, offset:Int ?= 0)
